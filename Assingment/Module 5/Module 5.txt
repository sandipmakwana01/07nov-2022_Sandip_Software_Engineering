Q1:- What do you understand By Database ?
-----------------------------------------

   ->Database is a collection of inter-related data, events and transactions. It is organised in a particular manner and provide access to the various users simultaneously. In this system, data is gathered and stored for a particular operation.

   The following are the two important properties of a database.

   1. Shared Property- 
   
        The database is a combination of related data that can be accessed by the people who have authority to access it and to meet their different information needs.

   2. Integrated Property- 
   
        The database is arranged in such a manner so as to avoid and eliminate duplication of data.

        On one hand, database are used for storing accounting data, whereas, on the other hand, DBMS is that software which helps in creating, developing and maintaining the database. It is a system that provides easier access to data recorded in the database. It handles a huge amount of data and defines, organises and transforms the database for different functions as per the need. Hence, it can be said that DBMS facilitates access to the database.

Q2:-  What is Normalization? 
----------------------------

   -> Normalization is the process of organizing a database to reduce redundancy and improve data integrity.

   -> Normalization also simplifies the database design so that it achieves the optimal structure composed of atomic elements (i.e. elements that cannot be broken down into smaller parts).

   -> Also referred to as database normalization or data normalization, normalization is an important part of relational database design, as it helps with the speed, accuracy, and efficiency of the database.

   -> By normalizing a database, you arrange the data into tables and columns.  You ensure that each table contains only related data. If data is not directly related, you create a new table for that data.

Q3:-  What is Difference between DBMS and RDBMS?
------------------------------------------------

   -> Database Management System (DBMS) is a software that is used to define, create and maintain a database and provides controlled access to the data. 

   -> Relational Database Management System (RDBMS) is an advanced version of a DBMS. 
 
                        DBMS

    1)DBMS stores data as file.
    2)Data elements need to access individually.
    3)No relationship between data.
    4)Normalization is not present.
    5)DBMS does not support distributed database.
    6)It stores data in either a navigational or hierarchical form.
    7)It deals with small quantity of data.
    8)Data redundancy is common in this model.
    9)It is used for small organization and deal with small data.
    10)It supports single user.
    11)It supports single user.
    12)The data in a DBMS is subject to low security levels with regards to data manipulation.
    13)Low software and hardware necessities.
    14)Examples: XML, Window Registry, etc.

                        RDBMS

    1)RDBMS stores data in tabular form.
    2)Multiple data elements can be accessed at the same time.
    3)Data is stored in the form of tables which are related to each other.
    4)Normalization is present.
    5)RDBMS supports distributed database.
    6)It uses a tabular structure where the headers are the column names, and the rows contain corresponding values.
    7)It deals with large amount of data.
    8)Keys and indexes do not allow Data redundancy.
    9)It is used to handle large amount of data.
    10)It supports multiple users.
    11)Data fetching is fast because of relational approach.
    12)There exists multiple levels of data security in a RDBMS.
    13)Higher software and hardware necessities.
    14)Examples: MySQL, PostgreSQL, SQL Server, Oracle, Microsoft Access etc.

Q4:-  What is MF Cod Rule of RDBMS Systems?
-------------------------------------------

   -> Rule 1: Information rule:-
      All information(including metadata) is to be represented as stored data in cells of tables. The rows and columns have to be strictly unordered.

   -> Rule 2: Guaranted Access:-
      Each unique piece of data(atomic value) should be accesible by : Table Name + Primary Key(Row) + Attribute(column).

   -> Rule 3: Systematic treatment of NULL:-
      Null has several meanings, it can mean missing data, not applicable or no value. It should be handled consistently. Also, Primary key must not be null, ever. Expression on NULL must give null.

   -> Rule 4: Active Online Catalog:-
      Database dictionary(catalog) is the structure description of the complete Database and it must be stored online. The Catalog must be governed by same rules as rest of the database. The same query language should be used on catalog as used to query database.

   -> Rule 5: Powerful and Well-Structured Language:-
      One well structured language must be there to provide all manners of access to the data stored in the database. Example: SQL, etc. If the database allows access to the data without the use of this language, then that is a violation.

   -> Rule 6: View Updation Rule:-
      All the view that are theoretically updatable should be updatable by the system as well.

   -> Rule 7: Relational Level Operation:-
      There must be Insert, Delete, Update operations at each level of relations. Set operation like Union, Intersection and minus should also be supported.

   -> Rule 8: Physical Data Independence:-
      The physical storage of data should not matter to the system. If say, some file supporting table is renamed or moved from one disk to another, it should not effect the application.

   -> Rule 9: Logical Data Independence:-
      If there is change in the logical structure(table structures) of the database the user view of data should not change. Say, if a table is split into two tables, a new view should give result as the join of the two tables. This rule is most difficult to satisfy.

   -> Rule 10: Integrity Independence:-
      The database should be able to enforce its own integrity rather than using other programs. Key and Check constraints, trigger etc, should be stored in Data Dictionary. This also make RDBMS independent of front-end.

   -> Rule 11: Distribution Independence:-
      A database should work properly regardless of its distribution across a network. Even if a database is geographically distributed, with data stored in pieces, the end user should get an impression that it is stored at the same place. This lays the foundation of distributed database.

   -> Rule 12: Nonsubversion Rule:-
      If low level access is allowed to a system it should not be able to subvert or bypass integrity rules to change the data. This can be achieved by some sort of looking or encryption.

Q5:-  What do you understand By Data Redundancy? 
------------------------------------------------

   -> Data redundancy occurs when the same piece of data is stored in two or more separate places and is a common occurrence in many businesses. 
   
   -> As more companies are moving  away from siloed data to using a central repository to store information, they are finding that their database is filled with inconsistent duplicates of the same entry. 
   
   -> Although it can be challenging to reconcile — or even benefit from — duplicate data entries, understanding how to reduce and track data redundancy efficiently can help mitigate long-term inconsistency issues for your business. 

Q6:-  What is DDL Interpreter? 
------------------------------

   -> Data Definition Language (DDL) is used to create and modify the structure of objects in a database using predefined commands and a specific syntax. These database objects include tables, sequences, locations, aliases, schemas and indexes.

   -> DDL is a standardized language with commands to define the storage groups (stogroups), different structures and objects in a database. DDL statements create, modify and remove database objects, such as tables, indexes and stogroups. DDL is also used in a generic sense to refer to any language that describes data.

   -> DDL includes Structured Query Language (SQL) statements to create and drop databases, aliases, locations, indexes, tables and sequences. It also includes statements to alter these objects and impose or drop certain constraints on tables, such as the following:

   UNIQUE
   PRIMARY
   FOREIGN KEY
   CHECK

   ->These constraints are used to enforce uniqueness, referential or domain integrity.


   ->When a DDL statement is executed, it takes effect immediately in the database.

   ->DDL is sometimes known as Data Description Language since its statements can also be used to describe, comment on and place labels on database objects.

Q7:-  What is DML Compiler in SQL? 
----------------------------------

   -> DML compiler translates DML statements in a query language into a low-level instruction and the generated instruction can be understood by Query Evaluation Engine

Q8:-  What is SQL Key Constraints writing an Example of SQL Key Constraints ?
-----------------------------------------------------------------------------

   -> SQL constraints are used to specify rules for the data in a table.

   ->Constraints are used to limit the type of data that can go into a table. This ensures the accuracy and reliability of the data in the table. If there is any violation between the constraint and the data action, the action is aborted.

   ->Constraints can be column level or table level. Column level constraints apply to a column, and table level constraints apply to the whole table.

   Example of PRIMARY KEY Constraint:
        ALTER TABLE `table_name` ADD PRIMARY KEY(`field_name`);

Q9:-  What is save Point? How to create a save Point write a Query?
-------------------------------------------------------------------

   -> A save point is a logical rollback point within a transaction. When you set a save point, whenever an error occurs past a save point, you can undo the events you have done up to the save point using the rollback.

   ->MySQL InnoDB provides support for the statements SAVEPOINT, ROLLBACK TO SAVEPOINT, RELEASE SAVEPOINT.

   ->The SAVEPOINT statement is used to set a save point for the transaction with the specified name. If a save point with the given name already exists the old one will be deleted.

   save point Query:
        SAVEPOINT identifier

Q10:-  What is trigger and how to create a Trigger in SQL? 
----------------------------------------------------------
    * What is trigger:
    -> Trigger is a statement that a system executes automatically when there is any modification to the database. 
    
    -> In a trigger, we first specify when the trigger is to be executed and then the action to be performed when the trigger executes. 
    
    -> Triggers are used to specify certain integrity constraints and referential constraints that cannot be specified using the constraint mechanism of SQL. 

    *how to create a Trigger in SQL:
    ->The schema_name is the name of the schema to which the new trigger belongs. The schema name is optional.

    ->The trigger_name is the user-defined name for the new trigger.

    ->The table_name is the table to which the trigger applies.

    ->The event is listed in the AFTER clause. The event could be INSERT, UPDATE, or DELETE. A single trigger can fire in response to one or more actions against the table.

    ->The NOT FOR REPLICATION option instructs SQL Server not to fire the trigger when data modification is made as part of a replication process.
    
    ->The sql_statements is one or more Transact-SQL used to carry out actions once an event occurs.

